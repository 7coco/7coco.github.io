<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>インターン体験談 on 7coco Tech Blog</title>
    <link>https://7coco.github.io/topics/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E4%BD%93%E9%A8%93%E8%AB%87/</link>
    <description>Recent content in インターン体験談 on 7coco Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 02 May 2017 09:09:19 +0900</lastBuildDate>
    
	<atom:link href="https://7coco.github.io/topics/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%B3%E4%BD%93%E9%A8%93%E8%AB%87/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>5日間の超短期、スピードインターン！ @Wantedly</title>
      <link>https://7coco.github.io/post/wantedly/</link>
      <pubDate>Tue, 02 May 2017 09:09:19 +0900</pubDate>
      
      <guid>https://7coco.github.io/post/wantedly/</guid>
      <description>当時の記録をそのまま転記 やったこと 以前 Wantedly で行われたイベントに参加した関係でご縁が生まれ、Wantedly で短期インターン ( なんと5日間 ) を行うことになりました。
配属されたのは Wantedly feed チームです。5日間このチームで何をやるのかを決めるところからスタートしました。
「何やりたい？」と聞かれて、私は1ユーザーとして Wantedly, 特にフィードにどうなってほしいかを考えました。 そこで私が注目したのは「フィードを長い間投稿していない企業には応募しづらいなあ。」という自分自身の感想です。 フィードを長い間、例えば1年以上更新していないと、
「フィードにあるような魅力的な事柄は1年経った今はもうなくなっているかもしれない」
「そもそも本気で採用活動していないのかも」
などと考えて応募ボタンを押すのを躊躇ってしまうのです。
そこで今回のインターンでは、この意見が多数のユーザーの意見であることをデータからきちんと数字として出し、一定期間フィードを投稿していない企業に対して投稿を勧めるような施策を行うことになりました。
課題に感じたこと データを集計してグラフにする。
実は、私にとって数学の授業以外では初めての経験でした。
集計対象のデータベースは PostgreSQL と BigQuery の二種類ありましたがどちらも今まで目の前にした中では飛び抜けて巨大なもので、欲しい情報を正確に取得するためのクエリの組み立てにかなりの時間を要しました。
さらに、「どのくらいのNがあればデータとして成り立つのか」「どういうグラフを作るのか」「そもそもどうやってグラフにするの」などとかなり基本的かつ根本的な問題に悩まされました。
収穫できたこと 5日間という短期間でしたがなんとかやりきることはできました。
新しい技術、知識に触れることももちろんできました ( 毎日触れすぎてやばかった ) が、収穫できたことの中で一番大きなことは「仕事」で実装するものが出す「数字」に少しでも触れられたことだと思います。
Wantedly の社員の方が仰っていたことをそのまま書かせていただきますが、どんなにきれいなコードで書かれていても、その機能がユーザーにとって良いものでなければ意味はありません。時には膨大な時間と労力を割いて実装した機能が売り上げに全く貢献しないこともあるかもしれません。
「仕事」でコードを書く以上、「数字」がついてこないとどうしようもない。
そんな世界に少しでも触れさせてもらえたことで、これからその世界に入って行こうとしている自分に足りないものは何なのか、これからどうするべきなのかを真剣に考えることができるようになりました。
繰り返しますが、5日間という短期間。けれど、この期間は非常に濃密で、得た経験は貴重なものでした。
このようにまとめると勘違いされてしまうかもしれないと思ったので最後に言っておきます。
私は怖気付いたわけではありません。結果の出せる、やってやれるエンジニアに、必ずなります！</description>
    </item>
    
    <item>
      <title>Animatelab での初めての実務経験</title>
      <link>https://7coco.github.io/post/animatelab/</link>
      <pubDate>Tue, 02 May 2017 09:04:00 +0900</pubDate>
      
      <guid>https://7coco.github.io/post/animatelab/</guid>
      <description>当時の記録をそのまま転記 やったこと 動画配信サービスアニメイトチャンネルの開発、保守に携わるエンジニアチームの一員としてアルバイトを始めました。
学校で得たバックエンドの知識を実務経験を通じてさらに伸ばしていきたいと思い、アルバイトに応募しました。
面接などでは自分のサーバーサイドプログラミングの知識について重点的にアピールしたため、サーバーサイドのタスクが多く割り振られることを予想していましたが、少人数のチームであることもあってフロントエンドのSlim, Sass, JS も担当しました。
バックエンドからフロントエンドまで様々なタスクをこなし、ステージングデプロイや本番デプロイも行うようになりました。
課題に感じたこと 学校でのチーム開発などでは自分がバックエンドが得意ということでサーバーサイドを中心に書いており、フロントを他のメンバーに任せることが多かったです。
そのため、フロントエンドに関する圧倒的な知識不足を感じました。
特に、端末によって生じる細かな挙動の違いなどに悩まされました。
これらはある程度は調べて身につく知識だとは思いますが、実務レベルでの対応技術は実際に自分で踏んでみて初めて身につくものだと思いますので、今後もっともっと経験を積んでいきたいです。
「バックエンドのほうが得意、好き、やりたい」という思いは今でも変わりませんが、突然何らかの関係でフロントのタスクを担当することはあると思いますので、その辺りの力も身につけていきたいです。
収穫できたこと GitFlowでの実務レベルでの開発経験を積めたことから、PRの精度が格段に上がったと思います。
Jenkinsを使ったデプロイの経験は初めてのものでしたが、今ではスムーズに行えます。
上司の方からのレビューを通じて自分のコードの書き方の問題点などを認識し、改善につなげることができました。
また、エンジニアとしてディレクター陣に伝えなくてはならないこと、問題はどこにあるのか、などエンジニアとしてのものの考え方についてもさらに学ぶことができました。
今後もさらに経験を積んで、様々な問題を問題の本質を見極めつつ解決することのできるエンジニアに成長していきたいです。</description>
    </item>
    
  </channel>
</rss>